{"version":3,"sources":["util.js","components/Products.js","components/Filter.js","components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["util","num","Number","toFixed","toLocaleString","Products","_this","this","productItems","props","products","map","product","react_default","a","createElement","className","key","id","href","concat","onClick","e","handleAddToCart","src","sku","alt","title","price","Component","count","value","sort","onChange","handleSortChange","size","handleSizeChange","Basket","cartItems","length","style","marginLeft","item","float","handleRemoveFromCart","reduce","c","alert","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","filter","localStorage","setItem","JSON","stringify","productAlreadyInCart","forEach","cp","push","objectSpread","listProducts","b","filteredProducts","availableSizes","indexOf","toUpperCase","target","_this2","getItem","parse","fetch","then","res","json","catch","err","data","Filter_Products","Products_Products","Basket_Basket","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d87691b7.chunk.js","sourcesContent":["export default {\n    formatCurrency: function (num) {\n        return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\n    }\n}","import React, { Component } from 'react';\nimport util from '../util'\nexport default class Products extends Component {\n\n    render() {\n        const productItems = this.props.products.map(product => (\n            <div className=\"col-md-4\" key={product.id}>\n                <div className=\"thumbnail text-center\">\n                    <a href={`#${product.id}`}onClick={(e)=>this.props.handleAddToCart(e, product)}>\n                        <img src={`products/${product.sku}_2.jpg`} alt={product.title} />\n                        <p>{product.title}</p>                        \n                    </a>\n                    <b>{util.formatCurrency(product.price)}</b>\n                    <button className=\"btn btn-primary\" onClick={(e)=>this.props.handleAddToCart(e, product)}>Add to cart</button>\n                </div>\n            </div>\n        ));\n\n        return (\n            <div className=\"row\">\n                {productItems}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nexport default class Products extends Component {\n\n    render() {\n\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    {`${this.props.count} products found.`}\n                </div>\n                <div className=\"col-md-4\">\n                    <label>Order by\n               <select className=\"form-control\" value={this.props.sort} onChange={this.props.handleSortChange}>\n                            <option value=\"\">Select</option>\n                            <option value=\"lowestprice\">Lowest to highest</option>\n                            <option value=\"highestprice\">Highest to lowest</option>\n                        </select>\n                    </label>\n                </div>\n                <div className=\"col-md-4\">\n                    <label > Filter Size\n               <select className=\"form-control\" value={this.props.size} onChange={this.props.handleSizeChange}>\n                            <option value=\"\">ALL</option>\n                            <option value=\"x\">XS</option>\n                            <option value=\"s\">S</option>\n                            <option value=\"m\">M</option>\n                            <option value=\"l\">L</option>\n                            <option value=\"xl\">XL</option>\n                            <option value=\"xxl\">XXL</option>\n                        </select>\n                    </label>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport util from '../util'\nexport default class Basket extends Component {\n    render() {\n        const { cartItems } = this.props;\n\n        return (\n            <div className=\"alert alert-info\">\n                {cartItems.length === 0\n                    ? \"Basket is empty\" :\n                    <div>You have {cartItems.length} items in the basket. <hr /></div>\n                }\n                {cartItems.length > 0 &&\n                    <div>\n                        <ul style={{ marginLeft: -25 }}>\n                            {cartItems.map(item => (\n                                <li key={item.id}>\n                                    <b>{item.title}</b>\n                                    <button style={{ float: 'right' }} className=\"btn btn-danger btn-xs\"\n                                        onClick={(e) => this.props.handleRemoveFromCart(e, item)}>X</button>\n                                    <br />\n                                    {item.count} X {util.formatCurrency(item.price)}\n                                </li>))\n                            }\n                        </ul>\n\n                        <b>Sum: {util.formatCurrency(cartItems.reduce((a, c) => (a + c.price * c.count), 0))}\n                        </b>\n                        <button onClick={() => alert('Todo: Implement checkout page.')} className=\"btn btn-primary\">checkout</button>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Basket from './components/Basket';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { size: '', sort: '', cartItems: [], products: [], filteredProducts: [] };\n  }\n  componentWillMount() {\n\n    if (localStorage.getItem('cartItems')) {\n      this.setState({ cartItems: JSON.parse(localStorage.getItem('cartItems')) });\n    }\n\n    fetch('http://localhost:8000/products').then(res => res.json())\n      .catch(err => fetch('db.json').then(res => res.json()).then(data => data.products))\n      .then(data => {\n        this.setState({ products: data });\n        this.listProducts();\n      });\n  }\n\n  handleRemoveFromCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems.filter(a => a.id !== product.id);\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    })\n  }\n\n  handleAddToCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n\n      cartItems.forEach(cp => {\n        if (cp.id === product.id) {\n          cp.count += 1;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItems.push({ ...product, count: 1 });\n      }\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    });\n  }\n\n  listProducts = () => {\n    this.setState(state => {\n      if (state.sort !== '') {\n        state.products.sort((a, b) =>\n          (state.sort === 'lowestprice'\n            ? ((a.price > b.price) ? 1 : -1)\n            : ((a.price < b.price) ? 1 : -1)));\n      } else {\n        state.products.sort((a, b) => (a.id > b.id) ? 1 : -1);\n      }\n      if (state.size !== '') {\n        return { filteredProducts: state.products.filter(a => a.availableSizes.indexOf(state.size.toUpperCase()) >= 0) };\n      }\n      return { filteredProducts: state.products };\n    })\n  }\n  handleSortChange = (e) => {\n    this.setState({ sort: e.target.value });\n    this.listProducts();\n  }\n  handleSizeChange = (e) => {\n    this.setState({ size: e.target.value });\n    this.listProducts();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>E-commerce Shopping Cart Application</h1>\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <Filter count={this.state.filteredProducts.length} handleSortChange={this.handleSortChange}\n              handleSizeChange={this.handleSizeChange} />\n            <hr />\n            <Products products={this.state.filteredProducts} handleAddToCart={this.handleAddToCart} />\n          </div>\n          <div className=\"col-md-3\">\n            <Basket cartItems={this.state.cartItems} handleRemoveFromCart={this.handleRemoveFromCart} />\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}